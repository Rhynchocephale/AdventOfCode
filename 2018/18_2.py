data = '''.#.#...|#.
.....#|##|
.|..|...#.
..|#.....#
#.#|||#|#|
...#.||...
.|....|...
||...#|.#|
|.||||..|.
...#.|..|.'''

data = '''#||.....|......|##.#.#|....|#.#|#.|....#|#||#.....
...#|#..#..#|.#...#|..|....##....|.#.|.#.......#..
|#.|#...|...|.##.|..#.#.....##.........##|..|.|...
...#..|....|.....#.............|..|.....|...|...#.
..|#..||..|####.#|#...##..|#|||#.#.###...#....#...
..|....||.#..|#|||..##.#.|#.||...|..#|..|.#....#..
#||..|..|#.|.###..........||.|.|..#.#..#||........
.|||#..#.|....#......##....#...#.|...#|.||.....#..
#.||.|#..|#.#.|#|....|.##|..#.....#.|#|..|.||#..#.
#|........|.#.....#....|#.|.|.##..#.|#.|.|...|....
|.|..#.#.##|.|#..#.#.#.|#||#|.#.#....#..|..#..|...
..#..||#|#...|#||...|#|.|.#..##.#.#....#.....||.#.
#..|||#...|..|#||.|#.....|.|##.........|||..#...|#
...|....#..|....|.||..|#....##..#....|.#|..#....|.
#.###|.|#|.##..|...|..|...||.......#|##.#|.||#|..#
|....|.#.|.#......|...#|||..||#.##..#.....#|..#.#.
..#|#...##....##..|.|.|#.|.||....|...#..|#.|...|..
|......|..|.#.....#...|........|.....#|#.#.|#.#.|.
||.|#..#.###..|.#.......||.#.#...#.#.|#....#|....#
#.|..|#..#||.....#..||.||.|##|#..#|.....#.#..###..
|.|#|.#.|..|||.|....#....####||.|.|##..|.|..||##|.
.....##...#..|#.|||..|..|..#||.#..#...|.|.####|#..
..|.#...|...#....#|..|.||.#...|##..|.#...#..||....
|.#|....|....|....|....|#..##..#....#|..||..||....
#..|.#.||..|..##.|...##...|...|#..|.||...#|.|....#
|....#||.##|.|#..#|.#..|...||..|.||..|...|.......#
##....|..#|||..|...#...#...|#..#|.|.#..||.#.#.#...
|#....||.#.#||.|#|.#.||..###.|.|.....#|...#.#...#.
.|.#|#.|......#.#..............#....|..||..||#||..
##.|...|...#.#|#|.#|.|.###...#..#..|..##|#|.||....
....#|#..#....|.|...|....||...##.....|.|.|.|.#||.|
.|#||||...#.#..##..##|||........##...#...|..#.|...
|.|.#|||.||..##..#|.......#.#|##..|.......|##.##..
...#.|#..#...|.|#.|...|#.#.#..|....||....#|...|..|
###|.#..#..#..####.#....###....#.#.#.|.|||...|#..#
##...#...#..#.....#|#|.|....||#..||||#..#.#.#...||
...#..|.|...##..|...|#........||.|.|.|..#....#|.#|
.........###|.....|#.|......|.......|.##.|...|...|
..........#.|..#..#.|....##.||....#|.##....|....||
..|#|.....|#...#..###||.##...#...#......|..#..|.#.
|...|..|||.||...|.#|....#|.|...|...#.|..|..||.#|#.
...#||...##.##.|...#....|...||..|..|..#..|.#..#||#
.|.||.#|..|.|##......#.......##....|#.#|.|.#.#..|.
..#..|..|..#...#.#..#|#|#|||...|......#.##...|....
.##..||.##|..|..|.|#.....|.|#..|....|#..|...#...|.
..|.|.|||.||..|..#.|..#.....|##|.|..|..###..#....|
|#...#.#|.#..|..#..|##.##||.||#.....|..#....#.|###
#..|..........##..|#.|..#.|.###.|..|.....|#|.#....
#.....#|#...|..|..|.|....##......|||..|.|...|.....
|..|...#.#.|....|......#|...##......|.##|.....|.#.'''

data = data.split('\n')

def adjacent(s, data):
	adj = ''
	
	for coords in [ [s[0]+1,s[1]], [s[0]-1,s[1]], [s[0],s[1]+1], [s[0],s[1]-1], [s[0]-1,s[1]-1], [s[0]-1,s[1]+1], [s[0]+1,s[1]-1], [s[0]+1,s[1]+1] ]:
		try:
			if coords[0] > -1 and coords[1] > -1:
				adj += data[coords[0]][coords[1]]
		except IndexError:
			pass
	return adj
	
def iteration(data):
	newData = []
	l = 0
	for line in data:
		newData.append('')
		for i, x in enumerate(line):
			r = ''
			a = adjacent([l,i], data)
			if x == '.':
				if a.count('|') > 2:
					r = '|'
				else:
					r = '.'
			elif x == '|':
				if a.count('#') > 2:
					r = '#'
				else:
					r = '|'
			elif x == '#':
				if a.count('#') > 0 and a.count('|') > 0:
					r = '#'
				else:
					r = '.'

			newData[-1] += r
		l += 1
	return newData

def printForest(data):
	a = '\n'.join(data)
	return(a)

#previousData = [data]

for i in range(1,1000000000):
	data = iteration(data)
	print(i)
	if i == 608:
		d608 = data
		break
	'''if data in previousData:
		print(i)
		print(previousData.index(data))
		exit()
	else:
		previousData.append(data)'''
	if not i%1000:
		print(i)
		print(printForest(data))
		
a = printForest(d608)
print(a.count('|')*a.count('#'))
